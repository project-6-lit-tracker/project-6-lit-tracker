{"version":3,"sources":["firebase.js","Components/Header.js","Components/Main.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","convert","require","Main","props","handleFirebaseChange","eventFb","setState","fbSearchInput","target","value","console","log","handleFirebaseSubmit","preventDefault","database","ref","push","state","removeList","listTitle","child","remove","handleChange","e","searchInput","handleFormSubmit","done","axios","url","responseType","paramsSerializer","params","Qs","stringify","arrayFormat","reqUrl","key","method","q","_limit","proxyHeaders","xmlToJSON","then","res","userSearchResults","condensedRes2","xml2js","data","compact","spaces","elements","userSearchRes","map","book","title","text","author","undefined","rating","imageUrl","userBooks","scrollToMyRef","myRef","window","scrollTo","current","offsetTop","React","createRef","createList","on","response","val","newState","bookInfo","name","className","action","onSubmit","this","htmlFor","type","placeholder","id","aria-label","required","onChange","color","src","alt","onClick","Component","Footer","href","rel","tabIndex","aria-hidden","App","books","userLibrary","booksToRead","bookResults","condensedRes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de7ae6b5.chunk.js","sourcesContent":["// firebase.js\nimport firebase from 'firebase';\n\n// Initialize Firebase\n// USE YOUR CONFIG OBJECT\nconst config = {\n    apiKey: \"AIzaSyD_3aQWQ3rO4YJO5R7EHj1v8Q6gfjAJaWk\",\n    authDomain: \"project-6-lit-tracker.firebaseapp.com\",\n    databaseURL: \"https://project-6-lit-tracker.firebaseio.com\",\n    projectId: \"project-6-lit-tracker\",\n    storageBucket: \"project-6-lit-tracker.appspot.com\",\n    messagingSenderId: \"739658073151\",\n    appId: \"1:739658073151:web:e487069fdf5b98da14648a\"\n};\nfirebase.initializeApp(config);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;\n","import React from 'react';\n\nconst Header = () => {\n\n    return(\n\n        <header>\n\n            <h1>Lit Tracker</h1>\n\n        </header>\n\n    )   \n   \n}\n\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Qs from 'qs';\nimport { FaStar, FaTimesCircle }  from 'react-icons/fa';\nimport firebase from 'firebase';\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport ReactLoading from \"react-loading\";\nconst convert = require('xml-js');\n\n\n\nclass Main extends Component {\n\n    constructor (props){\n\n        super();\n        \n        this.myRef = React.createRef()\n        \n        this.state = {\n            userBooks: [],\n            searchInput: \"\",\n            fbSearchInput: \"\",\n            createList: [],\n        // Setting state for the preloader\n            done: true\n        }\n    }\n\n// Firebase\ncomponentDidMount(){\n// Create a variable that holds a reference to our database\n    const dbRef = firebase.database().ref();\n\n// here we add an event listener to that variable that will fire every time there is a change in the database\n\n// this event listener takes a callback function which we will use to get our data from the database and call it response\n\n    dbRef.on('value', (response) => {\n\n// here we use Firebase's .val() method to parse our database info the way we want it\n      const data = response.val();\n\n      const newState = [];\n      \n      for (let key in data){\n          const bookInfo = {\n              key: key,\n              name: data[key],\n          }\n        \n        newState.push(bookInfo);\n\n      }\n      \n  // Change the Initial State\n    this.setState({\n        createList: newState,\n        fbSearchInput: ''\n    })\n    console.log(newState);\n    console.log(response.val());\n      \n    })\n}\n\n// Create List Handler\n    handleFirebaseChange = (eventFb) => {\n        this.setState({\n            fbSearchInput: eventFb.target.value,\n        })\n        console.log(eventFb.target.value);\n    }\n\n// Firebase Form Submit\n    handleFirebaseSubmit = (eventFb) => {\n        eventFb.preventDefault();\n\n        const dbUserList = firebase.database().ref();\n\n        dbUserList.push(this.state.fbSearchInput);\n\n        this.setState({\n            fbSearchInput: '',\n        })\n\n    }\n\n// Firebase Removal \n    removeList = (listTitle) => {\n        const dbRef = firebase.database().ref();\n\n        dbRef.child(listTitle).remove();\n    }\n\n\n\n// Second axios Search Handler\n    handleChange = (e) => {\n        this.setState({\n            searchInput: e.target.value,\n        })\n        console.log(e.target.value);\n    }\n\n\n// Second axios Form Submit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n    // Setting state for the preloader\n        this.setState({\n            done: false\n        })\n        axios ({\n            url: 'https://proxy.hackeryou.com',\n    \n            responseType: '',\n    \n    // paramsSerializer allows us to pass query params into axios call\n            paramsSerializer: function (params) {\n                return Qs.stringify(params, {arrayFormat: 'brackets'})\n            },\n    \n            params: {\n                reqUrl: \"https://www.goodreads.com/search/index.xml\",\n            \n                params : {\n                    key: '14csXzY0xdicnCrXfQSO1w',\n                    method: \"search_index\",\n                    q: this.state.searchInput,\n                    _limit: 4,\n                },\n            \n                proxyHeaders: {\n                    'Access-Control-Allow-Origin': \"https://proxy.hackeryou.com\"\n                }\n            },\n    \n            xmlToJSON: false\n\n    }).then ((res) => {\n    // Convert XML to JS Object\n        const userSearchResults = [];\n\n        const result3 = convert.xml2js(res.data, {compact: false, spaces: 2});\n        \n        const condensedRes2 = result3.elements[0].elements[1].elements[6].elements;\n\n        \n        \n        const userSearchRes = [...condensedRes2];\n        console.log(userSearchRes);\n        \n\n    // Push search results into empty array\n        userSearchRes.map(book => {\n\n            return (\n                userSearchResults.push({\n                    title: book.elements[8].elements[1].elements[0].text,\n\n                    author: book.elements[8].elements[2].elements[1].elements[0].text === undefined \n                    ? \"\" \n                    : book.elements[8].elements[2].elements[1].elements[0].text,\n\n                    key: book.elements[8].elements[0].elements[0].text,\n\n                    rating: book.elements[7].elements[0].text,\n\n                    imageUrl: book.elements[8].elements[3].elements[0].text \n                    === undefined ? \"/src/assets/noCover.jpg\"\n                    : book.elements[8].elements[3].elements[0].text,\n                    \n                })\n                );\n            })\n            \n            // Store searched books\n            this.setState({\n                userBooks: userSearchResults,\n            })\n            console.log(userSearchResults);\n            \n        this.scrollToMyRef(this.myRef);\n        })\n    // Setting state for the preloader\n        .then(() => this.setState({ done: true }));\n        \n\n    // Clear search input\n        this.setState({\n            searchInput: \"\",\n        })\n    }\n\n    //Function to scroll\n    scrollToMyRef = () => window.scrollTo(0, this.myRef.current.offsetTop);\n\n\n    render(){\n\n        return(\n            \n            <main>\n                <section className=\"landing\">\n                    <div className=\"wrapper\">\n\n                        <form className=\"search-form\" action=\"submit\" onSubmit={this.handleFormSubmit}>\n\n                            <label\n                            className=\"sr-only\"\n                            htmlFor=\"search\">\n                            </label>\n\n                            <input \n                        type=\"search\" \n                        placeholder=\"Search by title or author\"\n                        id= \"search\"\n                        name=\"search\"\n                        aria-label=\"Search through site content\"\n                        title=\"Search by title or author\"\n                        required\n                        onChange={this.handleChange}\n                        value={this.state.searchInput}>\n                        </input>\n\n                            <button type=\"submit\">Search</button>\n\n                        </form>\n\n                    </div>\n                </section>\n\n                <div className=\"search-results-container\">\n\n                    <section className=\"search-results\">\n                        <h2 ref={this.myRef}>Search Results</h2>\n                        <p>Enter your search above</p>\n                        <div className=\"display-container\">\n                            {!this.state.done === true ? (<ReactLoading type={\"bars\"} color={\"black\"} className={\"preloader\"}/>) : (this.state.userBooks.map(book =>{\n                                return (\n                                    <div key={book.key} className='book-info'>\n\n                                        <p>{book.title}</p>\n\n                                        <span><p>{book.author} </p></span>\n\n                                        <img src={`${book.imageUrl}`} alt={`Cover art for ${book.title}`}/>\n\n                                        <div className=\"icon\">\n\n                                            <p>{book.rating}</p><FaStar />\n\n                                        </div>\n\n                                        <div className=\"book-list-container\">\n\n                                            <ul className=\"book-list\">\n                                            {this.state.createList.map(book => {\n                                                return (\n                                                    <li key={book.key}>\n                                                        <p>Add to {book.name}</p>    \n                                                    </li>  \n                                                )\n                                            })}\n                                                {/* <li><p>Add to 2020 To-Read</p></li>\n                                                <li><p>Add to list</p></li>\n                                                <li><p>Add to list</p></li> */}\n                                            </ul>\n\n                                        </div>\n\n                                    </div>\n\n                                )\n                        \n                            }))}\n                        </div>\n                        \n                    </section>\n\n                    <section className=\"make-a-list\">\n            \n                        <form className=\"list-form\" action=\"submit\" onSubmit={this.handleFirebaseSubmit}>\n\n                            <label\n                            className=\"sr-only\"\n                            htmlFor=\"create-list\">\n                            </label>\n\n                            <input \n                            type=\"text\" \n                            id= \"create-list\"\n                            aria-label=\"Create personal book list\"\n                            title=\"Create book list\"\n                            required\n                            value={this.state.fbSearchInput}\n                            onChange={this.handleFirebaseChange}>\n                            </input>\n\n                            <button type=\"submit\">Create List</button>\n\n                        </form>\n                        \n                        <div className=\"placeholder\">\n                            <ul>\n                            {/* <p>List of books will appear here.</p> */}\n                                {this.state.createList.map(book => {\n                                    return (\n                                        <li key={book.key} className=\"list-title\">\n                                            <p>{book.name} </p>\n                                            <FaTimesCircle onClick={() => {this.removeList(book.key)}}/> \n                                        </li>  \n                                    )\n                                })}\n                            </ul>\n\n\n                        </div>\n                    </section>\n\n                </div>\n\n                <section className=\"goals\">\n                    <div className=\"wrapper goal-container\">\n                        <div className=\"goal-box goal1\">\n                            <p>Set a Goal!</p>\n                            <p>How many books do you want to read this month?</p>\n                            <form className=\"goal-form\" action=\"submit\">\n\n                                <label\n                                className=\"sr-only\"\n                                htmlFor=\"set-goal\">\n                                </label>\n\n                                <input \n                                type=\"text\" \n                                id= \"set-goal\"\n                                className=\"set-goal\"\n                                aria-label=\"Enter goal number of books\"\n                                title=\"Enter goal number of books\"\n                                required\n                                // value={this.state.fbSearchInput}\n                                // onChange={this.handleFirebaseChange}\n                                >\n                                </input>\n\n                                <button type=\"submit\">Enter Goal</button>\n\n                            </form>\n                        </div>\n                        <div className=\"goal-box\">\n                            <p>Your goal:</p>\n                            <p>x# books</p>\n                        </div>\n                        <div className=\"goal-box\">\n                            <p>You’ve read 30%.</p>\n                            <p>70% more to go!</p>\n                        </div>\n                    </div>\n                </section>\n\n            </main>\n            \n        );\n    }\n\n\n\n}\n\nexport default Main;\n\n// Click on Add to List, title of the book will populate the placeholder in the list section","import React from 'react';\n\nconst Footer = () => {\n    return (\n    <footer>\n\n        <p className=\"footer-text\">\n            2020 Juno College\n\n            <a href=\"http://www.afuadeborahcodes.com/\"\n            className=\"footer-link\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            tabIndex=\"0\"\n            aria-hidden=\"true\"\n            title=\"afuadeborahcodes.com\" \n            alt=\"Go to Afua's page.\"\n            >Afua Frimpong </a>\n\n            <a href=\"http://claudiaahn.com/\"\n            className=\"footer-link\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            tabIndex=\"0\"\n            aria-hidden=\"true\"\n            title=\"claudiaahn.com\"\n            alt=\"Go to Claudia's page\"\n            >Claudia Ahn </a>\n\n            <a href=\"http://fabiodwyer.com/\"\n            className=\"footer-link\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            tabIndex=\"0\"\n            aria-hidden=\"true\"\n            title=\"fabiodwyer.com\"\n            alt=\"Go to Fabio's page\"\n            >Fabio Dwyer </a>\n\n\n            <a href=\"https://www.linkedin.com/in/jacqueline-nosal/\"\n            className=\"footer-link\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            tabIndex=\"0\"\n            aria-hidden=\"true\"\n            title=\"Jacqui Nosal on Linked\"\n            alt=\"Go to Jacqui's page\"\n            >Jacqui Nosal </a>\n        </p>\n\n    </footer>\n    )\n}\n\n\nexport default Footer ","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport './App.css';\nimport axios from 'axios';\nimport Qs from 'qs';\n\n\nimport Header from './Components/Header';\nimport Main from './Components/Main';\nimport Footer from './Components/Footer';\nconst convert = require('xml-js');\n\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [],\n      // Main axios API info\n\n      searchInput: \"\",\n      // User search input for SearchBar\n\n      // searchedBooks: \"\",\n\n      userLibrary: [],\n      // User selected from API books\n      // Firebase\n\n      booksToRead: [],\n      // User selected books to read later on\n      // Firebase \n\n    }\n  }\n  \n  componentDidMount(){\n    // firebase \n    // const dbRef = firebase.database().ref();\n    // dbRef.on('value', (response) => {\n    //   console.log(response.val());\n    // });\n\n    // API\n    axios ({\n      url: 'https://proxy.hackeryou.com',\n\n      responseType: '',\n\n      // paramsSerializer allows us to pass query params into axios call\n      paramsSerializer: function (params) {\n        return Qs.stringify(params, {arrayFormat: 'brackets'})\n      },\n\n      params: {\n        reqUrl: \"https://www.goodreads.com/search/index.xml\",\n        \n        params : {\n          key: '14csXzY0xdicnCrXfQSO1w',\n          method: \"search_index\",\n          q: \"Lord of the Rings\"\n        },\n        \n        proxyHeaders: {\n          'Access-Control-Allow-Origin': \"https://proxy.hackeryou.com\"\n        }\n      },\n\n      xmlToJSON: false\n    }).then((res) => {\n      const bookResults = [];\n\n      const result2 = convert.xml2js(res.data, {compact: false, spaces: 2});\n      \n      const condensedRes = result2.elements[0].elements[1].elements[6].elements;\n    \n\n      const newRes = [...condensedRes];\n\n\n\n      // Grab individual book information from API \n      newRes.map((book) => {\n\n        return (\n            bookResults.push({\n              title: book.elements[8].elements[1].elements[0].text,\n\n              author: book.elements[8].elements[2].elements[1].elements[0].text,\n\n              key: book.elements[8].elements[0].elements[0].text,\n\n              rating: book.elements[7].elements[0].text,\n              \n              imageUrl: book.elements[8].elements[3].elements[0].text\n            })\n        );\n      })\n    \n        console.log(bookResults);\n\n      this.setState({\n        books: bookResults\n      })\n\n    })\n\n\n  }\n\n\n  \n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <ul>\n          {this.state.books.map((book) => {        \n            return <li>{book}</li>\n          })}\n        </ul> */}\n        {/* Firebase Setup */}\n        <Header />\n\n        <Main />\n        \n        <Footer />\n        \n        \n\n    \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}